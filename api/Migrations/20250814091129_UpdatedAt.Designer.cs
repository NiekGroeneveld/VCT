// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250814091129_UpdatedAt")]
    partial class UpdatedAt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductTray", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("TraysId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "TraysId");

                    b.HasIndex("TraysId");

                    b.ToTable("ProductTray");
                });

            modelBuilder.Entity("api.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("api.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConfigurationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ConfigurationTypeDataId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ConfigurationTypeDataId");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("api.Models.ConfigurationTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountDots")
                        .HasColumnType("int");

                    b.Property<float>("ConfigHeight")
                        .HasColumnType("float");

                    b.Property<string>("ConfigurationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("DotsDelta")
                        .HasColumnType("float");

                    b.Property<float>("HighExtractorDepth")
                        .HasColumnType("float");

                    b.Property<float>("HighExtractorHeight")
                        .HasColumnType("float");

                    b.Property<float>("LowExtractorDepth")
                        .HasColumnType("float");

                    b.Property<float>("LowExtractorHeight")
                        .HasColumnType("float");

                    b.Property<float>("MinTrayHeight")
                        .HasColumnType("float");

                    b.Property<float>("PalletDelta")
                        .HasColumnType("float");

                    b.Property<float>("TrayWidth")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationTypeDatas");
                });

            modelBuilder.Entity("api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Depth")
                        .HasColumnType("float");

                    b.Property<float>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductConfig")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Stable")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Width")
                        .HasColumnType("float");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("api.Models.Tray", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TrayConfig")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TrayPosition")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("Trays");
                });

            modelBuilder.Entity("ProductTray", b =>
                {
                    b.HasOne("api.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Tray", null)
                        .WithMany()
                        .HasForeignKey("TraysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.Configuration", b =>
                {
                    b.HasOne("api.Models.Company", "Company")
                        .WithMany("Configurations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.ConfigurationTypeData", "ConfigurationTypeData")
                        .WithMany("Configurations")
                        .HasForeignKey("ConfigurationTypeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ConfigurationTypeData");
                });

            modelBuilder.Entity("api.Models.Product", b =>
                {
                    b.HasOne("api.Models.Company", "company")
                        .WithMany("Products")
                        .HasForeignKey("companyId");

                    b.Navigation("company");
                });

            modelBuilder.Entity("api.Models.Tray", b =>
                {
                    b.HasOne("api.Models.Configuration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("api.Models.Company", b =>
                {
                    b.Navigation("Configurations");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("api.Models.ConfigurationTypeData", b =>
                {
                    b.Navigation("Configurations");
                });
#pragma warning restore 612, 618
        }
    }
}
